@model LibraryManagement.Models.Book

@{
    ViewBag.Title = "Edit Book";
}

<h2>Edit Book</h2>

@using (Html.BeginForm("Edit", "Book", FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.BookId) <!-- Hidden field for Book ID -->

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Author, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Publisher, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ISBN, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(Model => Model.PublishedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })

                @* @Html.TextBoxFor(model => model.PublishedDate, new { @class = "form-control", type = "datetime-local" }) *@
                @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger", type = "datetime-local" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.BookStatusID, ViewBag.bookStatus as SelectList,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookStatusID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageFile" class="form-control" />
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save Changes" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



